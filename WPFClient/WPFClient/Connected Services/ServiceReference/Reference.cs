//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CursorPos", Namespace="http://schemas.datacontract.org/2004/07/WCFServer")]
    [System.SerializableAttribute()]
    public partial class CursorPos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int XPosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int YPosField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeEvent {
            get {
                return this.TypeEventField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeEventField, value) != true)) {
                    this.TypeEventField = value;
                    this.RaisePropertyChanged("TypeEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int XPos {
            get {
                return this.XPosField;
            }
            set {
                if ((this.XPosField.Equals(value) != true)) {
                    this.XPosField = value;
                    this.RaisePropertyChanged("XPos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int YPos {
            get {
                return this.YPosField;
            }
            set {
                if ((this.YPosField.Equals(value) != true)) {
                    this.YPosField = value;
                    this.RaisePropertyChanged("YPos");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WCFServer")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IServiceCursor")]
    public interface IServiceCursor {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCursor/LoadData", ReplyAction="http://tempuri.org/IServiceCursor/LoadDataResponse")]
        WPFClient.ServiceReference.CursorPos[] LoadData(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCursor/LoadData", ReplyAction="http://tempuri.org/IServiceCursor/LoadDataResponse")]
        System.Threading.Tasks.Task<WPFClient.ServiceReference.CursorPos[]> LoadDataAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCursor/SaveData", ReplyAction="http://tempuri.org/IServiceCursor/SaveDataResponse")]
        void SaveData(WPFClient.ServiceReference.CursorPos cursorPos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCursor/SaveData", ReplyAction="http://tempuri.org/IServiceCursor/SaveDataResponse")]
        System.Threading.Tasks.Task SaveDataAsync(WPFClient.ServiceReference.CursorPos cursorPos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCursor/Connection", ReplyAction="http://tempuri.org/IServiceCursor/ConnectionResponse")]
        WPFClient.ServiceReference.User Connection(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCursor/Connection", ReplyAction="http://tempuri.org/IServiceCursor/ConnectionResponse")]
        System.Threading.Tasks.Task<WPFClient.ServiceReference.User> ConnectionAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCursor/SendMessage", ReplyAction="http://tempuri.org/IServiceCursor/SendMessageResponse")]
        void SendMessage(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCursor/SendMessage", ReplyAction="http://tempuri.org/IServiceCursor/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCursor/SortDataByType", ReplyAction="http://tempuri.org/IServiceCursor/SortDataByTypeResponse")]
        WPFClient.ServiceReference.CursorPos[] SortDataByType(int id, string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceCursor/SortDataByType", ReplyAction="http://tempuri.org/IServiceCursor/SortDataByTypeResponse")]
        System.Threading.Tasks.Task<WPFClient.ServiceReference.CursorPos[]> SortDataByTypeAsync(int id, string type);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCursorChannel : WPFClient.ServiceReference.IServiceCursor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceCursorClient : System.ServiceModel.ClientBase<WPFClient.ServiceReference.IServiceCursor>, WPFClient.ServiceReference.IServiceCursor {
        
        public ServiceCursorClient() {
        }
        
        public ServiceCursorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceCursorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCursorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceCursorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WPFClient.ServiceReference.CursorPos[] LoadData(int id) {
            return base.Channel.LoadData(id);
        }
        
        public System.Threading.Tasks.Task<WPFClient.ServiceReference.CursorPos[]> LoadDataAsync(int id) {
            return base.Channel.LoadDataAsync(id);
        }
        
        public void SaveData(WPFClient.ServiceReference.CursorPos cursorPos) {
            base.Channel.SaveData(cursorPos);
        }
        
        public System.Threading.Tasks.Task SaveDataAsync(WPFClient.ServiceReference.CursorPos cursorPos) {
            return base.Channel.SaveDataAsync(cursorPos);
        }
        
        public WPFClient.ServiceReference.User Connection(string login, string password) {
            return base.Channel.Connection(login, password);
        }
        
        public System.Threading.Tasks.Task<WPFClient.ServiceReference.User> ConnectionAsync(string login, string password) {
            return base.Channel.ConnectionAsync(login, password);
        }
        
        public void SendMessage(string msg) {
            base.Channel.SendMessage(msg);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(string msg) {
            return base.Channel.SendMessageAsync(msg);
        }
        
        public WPFClient.ServiceReference.CursorPos[] SortDataByType(int id, string type) {
            return base.Channel.SortDataByType(id, type);
        }
        
        public System.Threading.Tasks.Task<WPFClient.ServiceReference.CursorPos[]> SortDataByTypeAsync(int id, string type) {
            return base.Channel.SortDataByTypeAsync(id, type);
        }
    }
}
